---
import { actions } from 'astro:actions'
import { Icon } from 'astro-icon/components'

import { LastMitigations } from '@/modules/home/components/info/LastMitigations.tsx'
import { AllMitigations } from '@/modules/home/components/info/AllMitigations.tsx'
import { MitigationToast } from '@/modules/home/components/toast/MitigationToast'

import Layout from '@/modules/shared/layouts/Layout.astro'
import Title from '@/modules/shared/components/ui/Title.astro'
import HomeNavbar from '@/modules/home/components/ui/HomeNavbar.astro'
import Footer from '@/modules/shared/components/ui/Footer.astro'

import { getRiskLevelColor, getRiskLevelName } from '@/utils'


const { data: mitigationActionsData, error: findMitigationActionsError } = await actions.findAllMitigationActions({})
const { data: disasterTypesData, error: findOneError } = await actions.findAllDisasterTypes()

if ( findMitigationActionsError || findOneError ) return Astro.redirect( '/404' )

const { mitigationActions } = mitigationActionsData
const { disasterTypes } = disasterTypesData
---

<Layout>
  <div class="min-h-screen w-full">
    <HomeNavbar />

    <Title class="text-center text-pretty mt-16"> üõ°Ô∏è Mitigaciones üè• </Title>

    <MitigationToast
      mitigationActions={ mitigationActions }
      disasterTypes={ disasterTypes }
      client:idle
    />

    <div class="w-full flex flex-col justify-center items-center mt-16 gap-12 lg:flex-row lg:gap-4 px-4 sm:px-12 lg:mt-32">
      <div class="w-full px-4">
        <LastMitigations
          mitigationActions={ mitigationActions }
          disasterTypes={ disasterTypes }
          client:idle
        />
      </div>
    </div>
  </div>

  <div class="min-h-screen w-full">
    <Title class="text-center text-pretty my-8"> üìú Generar Mitigaciones con Predicciones Anteriores üè• </Title>
    <div class="w-full px-4 flex items-center justify-center">
      <p class="text-pretty text-[#5c4f3d] text-md max-w-[600px]">
        En esta secci√≥n puedes generar una planificaci√≥n de mitigaciones de una predicci√≥n anterior.
        Por favor, selecciona la fecha de predicci√≥n.
      </p>
    </div>
    <div class="w-full flex flex-col justify-center items-center mt-16 gap-12 lg:flex-row lg:gap-4 px-4 sm:px-12">
      <div class="w-full px-4 lg:w-2/3 lg:px-0">
        <AllMitigations
          mitigationActions={ mitigationActions }
          disasterTypes={ disasterTypes }
          client:only="react"
        />
      </div>
    </div>

  </div>


  <div class="pb-20">
    <Title class="text-center text-pretty my-12"> üõ°Ô∏è Acciones de Mitigaci√≥n üè• </Title>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12 py-12 px-8">
      {
      mitigationActions.filter( m => m.status ).map( ({ disasterTypeId, description, icon, actionList, objectives, riskLevel, id }) => (
      <div class="max-w-sm">
        <div class="relative group">
          <div class="absolute -inset-1 bg-gradient-to-r from-teal-600 to-coffee-600 rounded-lg blur opacity-25 group-hover:opacity-100 transition duration-1000 group-hover:duration-200"></div>
          <div class="relative px-7 py-6 bg-white ring-1 ring-gray-900/5 rounded-lg leading-none flex items-top justify-start space-x-6">
            <div class="space-y-2">
              <div class="flex items-center">
                <Icon name={ icon } class="h-8 w-8 text-teal-600" />
              </div>
              <p class="text-slate-800 group-hover:text-slate-600 transition duration-200 font-semibold line-clamp-1">{ description }</p>
              <div class="pt-2">
                <span class={`px-2 py-1 rounded-full text-xs font-semibold bg-gradient-to-r ${ getRiskLevelColor( riskLevel ) }`}>
                  Riesgo:
                  { getRiskLevelName( riskLevel ) }
                </span>
              </div>
              <div class="space-y-2 max-h-48 overflow-auto">
                <p class="text-sm font-medium text-slate-700">Acciones:</p>
                <ul class="list-disc list-inside text-sm text-slate-600 space-y-1">
                  { actionList.split( ';' ).slice( 0, 2 ).map( ( action ) => (
                  <li
                    class="line-clamp-1"
                  >{ action.trim() }</li>
                  )) }
                </ul>
              </div>
              <div class="pt-2">
                <p class="text-sm font-medium text-slate-700">Objetivo:</p>
                <p class="text-sm text-slate-600 line-clamp-1">{ objectives }</p>
              </div>
              <div class="py-2 flex items-center justify-between">
                <span class="px-2 py-1 rounded-full text-xs font-semibold text-white bg-gradient-to-r from-coffee-400 to-coffee-600">
                  Desastre:
                  {
                  disasterTypes.find( d => d.id === disasterTypeId )?.name ?? 'No hay tipo de desastre'
                  }
                </span>
                <a
                  class="text-sm font-semibold text-coffee-600 hover:text-coffee-400 transition duration-200"
                  href={ `/mitigations/${ id }` }
                >
                  Ver mas
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
      ) )
      }
    </div>
    {
    ( mitigationActions.length === 0 ) && (
    <div class="text-pretty text-xl font-semibold w-full flex items-center justify-center">
      No hay acciones de mitigaci√≥n registradas a√∫n.
    </div>
    )
    }
  </div>

  <div class="w-full mt-36">
    <Footer />
  </div>
</Layout>
