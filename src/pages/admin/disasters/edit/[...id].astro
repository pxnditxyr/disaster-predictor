---
import { Icon } from 'astro-icon/components'
import AdminLayout from '@/modules/admin/layouts/AdminLayout.astro'
import { actions } from 'astro:actions'

const { id } = Astro.params
const { data: disasterTypeData, error: findOneError } = await actions.findOneDisasterType({ id })
const { data: ourIconsData, error: findAllIconsError } = await actions.findAllOurIcons()

if ( findOneError ) return Astro.redirect( '/404' )
if ( findAllIconsError ) return Astro.redirect( '/404' )

const { disasterType } = disasterTypeData
const {
  name,
  description,
  icon,
  imageUrl,
} = disasterType

const { ourIcons } = ourIconsData
---

<AdminLayout>
  <div class="bg-cream-100 w-full min-h-screen py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto bg-white rounded-xl shadow-2xl overflow-hidden">
      <div class="bg-coffee-600 bg-opacity-90 p-6 text-cream-100">
        <h2 class="text-3xl font-bold flex items-center">
          <Icon name="mdi:plus-circle" class="w-8 h-8 mr-3 text-teal-300" />
          Editar Tipo de Desastre
        </h2>
      </div>

      <form class="p-8 space-y-6" id="form">
        <input type="hidden" name="id" value={ id } />
        <div>
          <label for="name" class="block text-sm font-medium text-coffee-700 mb-1">
            Nombre del Desastre *
          </label>
          <input
            type="text"
            id="name"
            name="name"
            required
            value={ name }
            class="w-full px-3 py-2 border border-coffee-300 rounded-md shadow-sm focus:ring-teal-500 focus:border-teal-500 text-coffee-800"
            placeholder="Ej: Huracán"
          />
        </div>

        <div>
          <label for="description" class="block text-sm font-medium text-coffee-700 mb-1">
            Descripción *
          </label>
          <textarea
            id="description"
            name="description"
            required
            rows={ 4 }
            class="w-full px-3 py-2 border border-coffee-300 rounded-md shadow-sm focus:ring-teal-500 focus:border-teal-500 text-coffee-800"
            placeholder="Describe brevemente este tipo de desastre"
          >{ description }</textarea>
        </div>

        <div>
          <label for="icon" class="block text-sm font-medium text-coffee-700 mb-1">
            Icono (opcional)
          </label>
          <select
            name="icon"
            class="w-full px-3 py-2 border border-coffee-300 rounded-md shadow-sm focus:ring-teal-500 focus:border-teal-500 text-coffee-800"
            id="icon"
          >
            <option value="">Selecciona un icono</option>
            {
              ourIcons.map( ({ name }) => (
                <option
                  value={ name }
                  selected={ name === icon }
                >
                  { name }
                </option>
              ) ).reverse()
            }
          </select>
        </div>

        <div>
          <label for="imageUrl" class="block text-sm font-medium text-coffee-700 mb-1">
            URL de la Imagen (opcional)
          </label>
          <input
            type="url"
            id="imageUrl"
            name="imageUrl"
            value={ imageUrl }
            class="w-full px-3 py-2 border border-coffee-300 rounded-md shadow-sm focus:ring-teal-500 focus:border-teal-500 text-coffee-800"
            placeholder="https://ejemplo.com/imagen.jpg"
          />
        </div>

        <div class="flex justify-end space-x-3 pt-6">
          <button
            type="submit"
            class="px-6 py-2 border border-transparent text-white bg-teal-600 rounded-md hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 transition duration-300 shadow-md"
          >
            Guardar
          </button>
        </div>
      </form>
    </div>
  </div>
</AdminLayout>
<script>
import { actions } from 'astro:actions'
import { getErrorMessage } from '@/utils'
import Swal from 'sweetalert2'

const form = document.querySelector( '#form' ) as HTMLFormElement
const submitButton = document.querySelector( 'button' ) as HTMLButtonElement

form.addEventListener( 'submit', async ( event ) => {
  event.preventDefault()
  submitButton.disabled = true

  const formData = new FormData( form )

  const { error } = await actions.updateDisasterType( formData )

  if ( error ) {

    const errorMessage = getErrorMessage( error )

    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: errorMessage,
    })

    submitButton.disabled = false
    return
  }

  window.location.href = '/admin/disasters'
} )
</script>
<style>
textarea {
  resize: none;
  min-height: 100px;
  form-sizing: content;
  max-height: 200px;
}
</style>
