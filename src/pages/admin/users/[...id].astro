---
import { Icon } from 'astro-icon/components'
import AdminLayout from '@/modules/admin/layouts/AdminLayout.astro'
import { formatDate, getStatusColor } from '@/utils'
import { actions } from 'astro:actions'

const { id } = Astro.params
const { data: usersData, error: findUsersError } = await actions.findOneUser({ id })
const { data: rolesData, error: findAllRolesError } = await actions.findAllRoles()

if ( findUsersError || findAllRolesError )
  return Astro.redirect( '/404' )

const { roles } = rolesData
const { user } = usersData

const {
  name,
  lastName,
  email,
  roleId,
  createdAt,
  updatedAt,
  status
} = user
---

<AdminLayout>
  <div class="bg-cream-100 min-h-screen py-12 px-4 sm:px-6 lg:px-8 w-full">
    <div class="max-w-4xl mx-auto bg-white rounded-xl shadow-2xl overflow-hidden">
      <div class="bg-coffee-600 p-6 text-cream-100">
        <div class="flex items-center justify-between gap-20">
          <h1 class="text-3xl font-bold flex items-center gap-4">
            <Icon
              name={ roleId }
              class="text-teal-300"
              size={ 50 }
            />
            { name } { lastName }
          </h1>
          <span class={ `px-3 py-1 rounded-full text-lg font-semibold ${ getStatusColor( status ) }` }>
            { status ? 'Activo' : 'Inactivo' }
          </span>
        </div>
      </div>
      <div class="p-8 space-y-6">
        <div class="flex flex-col md:flex-row justify-between items-center gap-20">
          <div class="bg-cream-50 p-4 rounded-lg flex flex-col gap-4 w-full">
            <h3 class="text-xl font-semibold text-coffee-800"> Correo Electrónico </h3>
            <span class={ `rounded-full text-lg font-semibold` }>
              { email }
            </span>
          </div>

          <div class="bg-cream-50 p-4 rounded-lg flex flex-col gap-4">
            <h3 class="text-xl font-semibold text-coffee-800"> Rol </h3>
            <span class={ `px-3 rounded-full text-lg font-semibold text-teal-600 bg-teal-100` }>
              { roles.find( ( role ) => role.id === roleId )?.name }
            </span>
          </div>
        </div>

        <div class="flex flex-col md:flex-row justify-between items-center gap-20 p-8">
          <div>
            <h3 class="text-lg font-medium text-coffee-600">Creado el</h3>
            <p class="text-coffee-800">{ formatDate( createdAt ) }</p>
          </div>
          <div>
            <h3 class="text-lg font-medium text-coffee-600">Última actualización</h3>
            <p class="text-coffee-800">{ formatDate( updatedAt ) }</p>
          </div>
        </div>

        <div class="flex justify-between items-center gap-4">
          <a
            class="px-4 py-2 bg-teal-600 text-white rounded-md hover:bg-teal-700 transition duration-300 flex items-center"
            href={ `/admin/users/edit/${ id }` }
          >
            <Icon name="mdi:pencil" class="w-5 h-5 mr-2" />
            Editar información
          </a>
          <button
            class="px-4 py-2 bg-coffee-500 text-white rounded-md hover:bg-coffee-600 transition duration-300 flex items-center"
            id="back-button"
          >
            <Icon
              name="mdi:arrow-left"
              size={ 24 }
            />
            Volver a la lista
          </button>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>
<script>

const backButton = document.querySelector( '#back-button' ) as HTMLButtonElement
backButton.addEventListener( 'click', async () => {
  window.history.back()
} )

</script>
