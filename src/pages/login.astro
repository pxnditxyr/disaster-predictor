---
import { Icon } from 'astro-icon/components'
import AuthLayout from '@/modules/auth/layouts/AuthLayout.astro'

---

<AuthLayout>
  <div class="w-full flex p-4 absolute top-4 left-4">
    <button id="back" class="bg-white hover:bg-slate-800 hover:text-white text-slate-600 py-2 px-4 rounded-full flex items-center transition duration-300 ease-in-out transform hover:scale-105 shadow-md">
      <Icon name="mdi:arrow-left" class="w-5 h-5 mr-2" />
      Volver
    </button>
  </div>



  </div>
  <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-md">
    <div class="text-center mb-8">
      <Icon
        name="briefcase"
        class="h-32 w-32 text-[#8B4513] mx-auto"
        transition:name="auth-icon"
      />
    </div>
    <h1 class="text-3xl font-bold text-center text-[#5D2E0C] mb-8">Bienvenido a Disaster Predictor 🌍</h1>
    <h2 class="text-center text-xl font-semibold text-[#5D2E0C] mb-8">Inicia sesión | Administrador</h2>
    <form
      id="loginForm"
      class="space-y-6"
    >
      <div>
        <label
          for="email"
          class="block text-sm font-medium text-[#5D2E0C] mb-1"
        >
          Correo electrónico
        </label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class="w-full px-3 py-2 border border-[#D2B48C] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8B4513]"
        />
      </div>
      <div>
        <label
          for="password"
          class="block text-sm font-medium text-[#5D2E0C] mb-1"
        >
          Contraseña
        </label>
        <div class="relative">
          <input name="password" type="password" id="password" required class="w-full px-3 py-2 border border-[#D2B48C] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8B4513]">
          <button type="button" class="toggle-password absolute right-3 top-1/2 transform -translate-y-1/2 text-[#5D2E0C]" aria-label="Mostrar contraseña">
            <Icon
              name="view-show"
              class="h-5 w-5 text-[#5D2E0C]"
            />
          </button>
        </div>
      </div>
      <button type="submit" class="w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-[#8B4513] hover:bg-[#5D2E0C] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#8B4513]">
        Iniciar sesión
      </button>
    </form>
  </div>
</AuthLayout>
<script>
import Swal from 'sweetalert2'
import { navigate } from 'astro:transitions/client'

const { signIn } = await import( 'auth-astro/client' )

document.addEventListener( 'astro:page-load', () => {
  const form = document.querySelector( 'form' ) as HTMLFormElement
  const submitButton = document.querySelector( 'button' ) as HTMLButtonElement

  form.addEventListener( 'submit', async ( event ) => {

    event.preventDefault()

    submitButton.disabled = true

    const formData = new FormData( form )

    const response = await signIn( 'credentials', {
      email: formData.get( 'email' ) as string,
      password: formData.get( 'password' ) as string,
      redirect: false,
    } )

    if ( response ) {
      Swal.fire( {
        icon: 'error',
        title: 'Error en el Inicio de sesión',
        text: `Parece que el correo electrónico o la contraseña son incorrectos`
      } )
      submitButton.disabled = false
      return
    }
    window.location.replace( '/dashboard' )
  } )


  const togglePassword = document.querySelector( '.toggle-password' ) as HTMLButtonElement
  const passwordInput = document.querySelector( '#password' ) as HTMLInputElement

  togglePassword.addEventListener('click', function() {
    const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
    passwordInput.setAttribute('type', type);
    this.innerHTML = type === 'password' ?
      '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>' :
      '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line></svg>';
  });

  const backElement = document.querySelector( '#back' ) as HTMLLIElement
  console.log(backElement)

  backElement.addEventListener( 'click', async () => {
    navigate( '/' )
  } )
} )
</script>
