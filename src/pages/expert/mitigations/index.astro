
---
import { actions } from 'astro:actions'
import { Icon } from 'astro-icon/components'
import ExpertLayout from '@/modules/expert/layouts/ExpertLayout.astro'

const { data: mitigationActionsData, error: findAllMitigationActionsError } = await actions.findAllMitigationActions({})
const { data: disasterTypesData, error: findAllDisasterTypesError } = await actions.findAllDisasterTypes({})

if ( findAllMitigationActionsError || findAllDisasterTypesError ) {
  return Astro.redirect( '/expert' )
}

const { mitigationActions } = mitigationActionsData
const { disasterTypes } = disasterTypesData
---

<ExpertLayout>
  <div class="flex flex-col gap-8 py-8 px-6">
    <h1 class="text-4xl font-extrabold text-coffee-800 text-center">
      Gestor de Acciones de Mitigaci√≥n üõ°Ô∏è
    </h1>

    <div class="w-full flex justify-end mt-8">
      <a
        href={ `/expert/mitigations/new` }
class="text-2xl font-bold text-coffee-700 flex items-center rounded-xl bg-white p-4 shadow-[0_5px_10px_rgba(255,240,220,0.7)] border-2 border-white border-[rgba(255,240,220,0.9)] hover:border-teal-600 transition duration-300 ease-in-out"
      >
        <Icon name="mdi:newspaper-plus" class="w-8 h-8 mr-2 text-teal-500" />
        Nueva Acci√≥n de Mitigaci√≥n
      </a>
    </div>

    <div class="bg-white flex flex-col gap-8 rounded-xl shadow-[0_50px_100px_rgba(255,240,220,1)]">
      <h2 class="text-2xl font-bold text-coffee-700 flex items-center">
        <Icon name="mdi:list-status" class="w-8 h-8 mr-2 text-teal-500" />
        Lista de Acciones de Mitigaci√≥n
      </h2>
      <ul class="flex flex-col gap-4">
        {
        mitigationActions.map( ( mitigationActions ) => (
        <li class="bg-cream-50 rounded-lg p-4 flex items-center justify-between transition duration-300 ease-in-out transform hover:scale-102 hover:shadow-md gap-8">
          <a href={ `/expert/mitigations/${ mitigationActions.id }` }>
            <div class="flex items-center space-x-4">
              <div>
                <h3 class="text-xl font-semibold text-coffee-700 flex items-center capitalize">
                  <Icon
                    name={ mitigationActions.icon ?? 'mdi:alert-circle' }
                    class="w-6 h-6 mr-2 text-teal-500"
                  />
                  { mitigationActions.description }
                </h3>
                <ul class="list-disc list-inside space-y-2 mt-5">
                  {
                  mitigationActions.actionList.split( ';' ).map( ( action ) => (
                  <li class="text-coffee-700">{ action }</li>
                  ) )
                  }
                </ul>

                <div class="flex items-center space-x-2 py-4">
                  <span
                    class:list={[
                      "text-red-500 text-xs rounded-full px-2 py-1 bg-red-100 font-semibold flex items-center justify-center gap-2",
                      {
                        'hidden': mitigationActions.status
                      }
                    ]}
                  >
                    <Icon name="mdi:close-circle" class="w-5 h-5" />
                    Inactivo
                  </span>
                  <span
                    class:list={[
                      "text-green-500 text-xs rounded-full px-2 py-1 bg-green-100 font-semibold flex items-center justify-center gap-2",
                      {
                        'hidden': !mitigationActions.status
                      }
                    ]}
                  >
                    <Icon name="mdi:check-circle" class="w-5 h-5" />
                    Activo
                  </span>
                  <span class="text-xs text-coffee-600 bg-yellow-100 rounded-full px-2 py-1 font-semibold">
                    Acci√≥n de mitigaci√≥n para:
                    {
                    ( disasterTypes.find(
                      ( disasterType ) => disasterType.id === mitigationActions.disasterTypeId
                    )?.name )
                    }
                  </span>
                </div>

              </div>
            </div>
          </a>
          <div class="flex space-x-2">
            <a
              class="p-2 text-teal-600 hover:bg-teal-100 rounded-full transition duration-300 ease-in-out edit-button"
              aria-label={ `Ver detalles de la acci√≥n de mitigaci√≥n ${ mitigationActions.description }` }
              href={ `/expert/mitigations/${ mitigationActions.id }` }
            >
              <Icon name="mdi:eye" class="w-5 h-5" />
            </a>

            <a
              class="p-2 text-teal-600 hover:bg-teal-100 rounded-full transition duration-300 ease-in-out"
              aria-label={`Editar ${ mitigationActions.description }`}
              href={ `/expert/mitigations/edit/${ mitigationActions.id }` }
            >
              <Icon name="mdi:pencil" class="w-5 h-5" />
            </a>
            <button
              class="p-2 text-red-600 hover:bg-red-100 rounded-full transition duration-300 ease-in-out delete-button"
              aria-label={`Eliminar ${ mitigationActions.description }`}
              data-id={ mitigationActions.id }
              current-status={ mitigationActions.status }
            >
              <Icon name="mdi:delete" class="w-5 h-5" />
            </button>
          </div>
        </li>
        ) )
        }
      </ul>
    </div>
  </div>
</ExpertLayout>

<script>
import { actions } from 'astro:actions'
import Swal from 'sweetalert2'

const deleteButtons = document.querySelectorAll( '.delete-button' )

deleteButtons.forEach( ( button ) => {
  button.addEventListener( 'click', async ( _e ) => {

    const id = Number( button.getAttribute( 'data-id' ) )
    const currentStatus = button.getAttribute( 'current-status' ) === 'true'

    const { error } = await actions.toggleStatusMitigationAction( { id, currentStatus } )

    if ( error ) {

      Swal.fire( {
        icon: 'error',
        title: 'Error al eliminar la acci√≥n de mitigaci√≥n',
        text: 'No se pudo eliminar la acci√≥n de mitigaci√≥n. Por favor, int√©ntelo de nuevo.',
      } )
      return
    }

    Swal.fire({
      icon: 'success',
      title: 'Estado de la acci√≥n de mitigaci√≥n actualizado',
      text: `La acci√≥n de mitigaci√≥n ha sido marcado como ${ !currentStatus ? 'Activo' : 'Inactivo' }`,
    })

    button.setAttribute( 'current-status', ( !currentStatus ).toString() )

    const listItem = button.closest( 'li' ) as HTMLLIElement

    const spanStatusActive = listItem.querySelector('.text-green-500')
    const spanStatusInactive = listItem.querySelector('.text-red-500')

    if ( spanStatusActive ) {
      spanStatusActive.classList.toggle( 'hidden', currentStatus )
    }
    if ( spanStatusInactive ) {
      spanStatusInactive.classList.toggle( 'hidden', !currentStatus )
    }
  } )
} )
</script>
